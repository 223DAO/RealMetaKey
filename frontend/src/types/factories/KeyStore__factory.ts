/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KeyStore, KeyStoreInterface } from "../KeyStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NFT",
        name: "_nftContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNfts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalKeys",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingKeys",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "redeemedKeys",
            type: "string[]",
          },
          {
            internalType: "bool",
            name: "canRedeem",
            type: "bool",
          },
        ],
        internalType: "struct NFTState[]",
        name: "nftStates",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRedeemedKeys",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "redeemKey",
    outputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalKeys",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingKeys",
            type: "uint256",
          },
          {
            internalType: "string[]",
            name: "redeemedKeys",
            type: "string[]",
          },
          {
            internalType: "bool",
            name: "canRedeem",
            type: "bool",
          },
        ],
        internalType: "struct NFTState",
        name: "nftState",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setRedeemEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
    ],
    name: "supplyKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405260016000806101000a81548160ff02191690831515021790555034801561002a57600080fd5b50604051610d6e380380610d6e833981810160405281019061004c91906100df565b33600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610163565b6000815190506100d98161014c565b92915050565b6000602082840312156100f157600080fd5b60006100ff848285016100ca565b91505092915050565b60006101138261012c565b9050919050565b600061012582610108565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101558161011a565b811461016057600080fd5b50565b60805160601c610bf061017e60003960005050610bf06000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063704b6c0211610066578063704b6c0214610121578063896bafe91461013d57806389b86f9c14610159578063d8cb55e314610177578063f851a4401461019557610093565b80634baa6cc9146100985780635673746e146100b65780635c8a54a6146100d457806363aac3a3146100f0575b600080fd5b6100a06101b3565b6040516100ad91906109f5565b60405180910390f35b6100be6101b8565b6040516100cb919061093f565b60405180910390f35b6100ee60048036038101906100e99190610506565b6101bd565b005b61010a60048036038101906101059190610574565b610251565b60405161011892919061099e565b60405180910390f35b61013b600480360381019061013691906104dd565b610260565b005b6101576004803603810190610152919061054b565b610334565b005b6101616103e0565b60405161016e9190610983565b60405180910390f35b61017f6103f1565b60405161018c9190610961565b60405180910390f35b61019d6103f6565b6040516101aa9190610924565b60405180910390f35b600090565b606090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610244906109d5565b60405180910390fd5b5050565b606061025b61041c565b915091565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e7906109d5565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb906109d5565b60405180910390fd5b806000806101000a81548160ff02191690831515021790555050565b60008054906101000a900460ff1681565b606090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060c0016040528060008152602001606081526020016000815260200160008152602001606081526020016000151581525090565b60008135905061046381610b75565b92915050565b60008083601f84011261047b57600080fd5b8235905067ffffffffffffffff81111561049457600080fd5b6020830191508360208202830111156104ac57600080fd5b9250929050565b6000813590506104c281610b8c565b92915050565b6000813590506104d781610ba3565b92915050565b6000602082840312156104ef57600080fd5b60006104fd84828501610454565b91505092915050565b6000806020838503121561051957600080fd5b600083013567ffffffffffffffff81111561053357600080fd5b61053f85828601610469565b92509250509250929050565b60006020828403121561055d57600080fd5b600061056b848285016104b3565b91505092915050565b60006020828403121561058657600080fd5b6000610594848285016104c8565b91505092915050565b60006105a98383610751565b905092915050565b60006105bd83836107e6565b905092915050565b6105ce81610ac0565b82525050565b60006105df82610a30565b6105e98185610a6b565b9350836020820285016105fb85610a10565b8060005b858110156106375784840389528151610618858261059d565b945061062383610a51565b925060208a019950506001810190506105ff565b50829750879550505050505092915050565b600061065482610a30565b61065e8185610a7c565b93508360208202850161067085610a10565b8060005b858110156106ac578484038952815161068d858261059d565b945061069883610a51565b925060208a01995050600181019050610674565b50829750879550505050505092915050565b60006106c982610a3b565b6106d38185610a8d565b9350836020820285016106e585610a20565b8060005b85811015610721578484038952815161070285826105b1565b945061070d83610a5e565b925060208a019950506001810190506106e9565b50829750879550505050505092915050565b61073c81610ad2565b82525050565b61074b81610ad2565b82525050565b600061075c82610a46565b6107668185610a9e565b9350610776818560208601610b08565b61077f81610b3b565b840191505092915050565b600061079582610a46565b61079f8185610aaf565b93506107af818560208601610b08565b6107b881610b3b565b840191505092915050565b60006107d0601383610aaf565b91506107db82610b4c565b602082019050919050565b600060c0830160008301516107fe6000860182610906565b50602083015184820360208601526108168282610751565b915050604083015161082b6040860182610906565b50606083015161083e6060860182610906565b506080830151848203608086015261085682826105d4565b91505060a083015161086b60a0860182610733565b508091505092915050565b600060c08301600083015161088e6000860182610906565b50602083015184820360208601526108a68282610751565b91505060408301516108bb6040860182610906565b5060608301516108ce6060860182610906565b50608083015184820360808601526108e682826105d4565b91505060a08301516108fb60a0860182610733565b508091505092915050565b61090f81610afe565b82525050565b61091e81610afe565b82525050565b600060208201905061093960008301846105c5565b92915050565b600060208201905081810360008301526109598184610649565b905092915050565b6000602082019050818103600083015261097b81846106be565b905092915050565b60006020820190506109986000830184610742565b92915050565b600060408201905081810360008301526109b8818561078a565b905081810360208301526109cc8184610876565b90509392505050565b600060208201905081810360008301526109ee816107c3565b9050919050565b6000602082019050610a0a6000830184610915565b92915050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610acb82610ade565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610b26578082015181840152602081019050610b0b565b83811115610b35576000848401525b50505050565b6000601f19601f8301169050919050565b7f6f6e6c792061646d696e2063616e2063616c6c00000000000000000000000000600082015250565b610b7e81610ac0565b8114610b8957600080fd5b50565b610b9581610ad2565b8114610ba057600080fd5b50565b610bac81610afe565b8114610bb757600080fd5b5056fea2646970667358221220fe6c9d52ccb974c6feb792818657f90d59160544f5cf7ac059a24671396a5bf764736f6c63430008040033";

export class KeyStore__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KeyStore> {
    return super.deploy(_nftContract, overrides || {}) as Promise<KeyStore>;
  }
  getDeployTransaction(
    _nftContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftContract, overrides || {});
  }
  attach(address: string): KeyStore {
    return super.attach(address) as KeyStore;
  }
  connect(signer: Signer): KeyStore__factory {
    return super.connect(signer) as KeyStore__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeyStoreInterface {
    return new utils.Interface(_abi) as KeyStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeyStore {
    return new Contract(address, _abi, signerOrProvider) as KeyStore;
  }
}
