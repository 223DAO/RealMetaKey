/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KeyStore, KeyStoreInterface } from "../KeyStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NFT",
        name: "_nftContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canRedeemKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNfts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalKeys",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingKeys",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "redeemedKeys",
            type: "string[]",
          },
        ],
        internalType: "struct NFTState[]",
        name: "nftStates",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRedeemedKeys",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "redeemKey",
    outputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalKeys",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingKeys",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "redeemedKeys",
            type: "string[]",
          },
        ],
        internalType: "struct NFTState",
        name: "nftState",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingKeys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setRedeemEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
    ],
    name: "supplyKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405260016000806101000a81548160ff02191690831515021790555034801561002a57600080fd5b50604051610d31380380610d31833981810160405281019061004c91906100df565b33600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610163565b6000815190506100d98161014c565b92915050565b6000602082840312156100f157600080fd5b60006100ff848285016100ca565b91505092915050565b60006101138261012c565b9050919050565b600061012582610108565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101558161011a565b811461016057600080fd5b50565b60805160601c610bb361017e60003960005050610bb36000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063896bafe911610066578063896bafe91461014857806389b86f9c14610164578063d8cb55e314610182578063e2ec198f146101a0578063f851a440146101be5761009e565b80634baa6cc9146100a35780635673746e146100c15780635c8a54a6146100df57806363aac3a3146100fb578063704b6c021461012c575b600080fd5b6100ab6101dc565b6040516100b891906109b8565b60405180910390f35b6100c96101e1565b6040516100d69190610902565b60405180910390f35b6100f960048036038101906100f49190610524565b6101e6565b005b61011560048036038101906101109190610592565b61027a565b604051610123929190610961565b60405180910390f35b610146600480360381019061014191906104fb565b610289565b005b610162600480360381019061015d9190610569565b61035d565b005b61016c610409565b6040516101799190610946565b60405180910390f35b61018a61041a565b6040516101979190610924565b60405180910390f35b6101a861041f565b6040516101b59190610946565b60405180910390f35b6101c6610424565b6040516101d391906108e7565b60405180910390f35b600090565b606090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90610998565b60405180910390fd5b5050565b606061028461044a565b915091565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090610998565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e490610998565b60405180910390fd5b806000806101000a81548160ff02191690831515021790555050565b60008054906101000a900460ff1681565b606090565b600090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060800160405280600081526020016000815260200160608152602001606081525090565b60008135905061048181610b38565b92915050565b60008083601f84011261049957600080fd5b8235905067ffffffffffffffff8111156104b257600080fd5b6020830191508360208202830111156104ca57600080fd5b9250929050565b6000813590506104e081610b4f565b92915050565b6000813590506104f581610b66565b92915050565b60006020828403121561050d57600080fd5b600061051b84828501610472565b91505092915050565b6000806020838503121561053757600080fd5b600083013567ffffffffffffffff81111561055157600080fd5b61055d85828601610487565b92509250509250929050565b60006020828403121561057b57600080fd5b6000610589848285016104d1565b91505092915050565b6000602082840312156105a457600080fd5b60006105b2848285016104e6565b91505092915050565b60006105c78383610760565b905092915050565b60006105db83836107f5565b905092915050565b6105ec81610a83565b82525050565b60006105fd826109f3565b6106078185610a2e565b935083602082028501610619856109d3565b8060005b85811015610655578484038952815161063685826105bb565b945061064183610a14565b925060208a0199505060018101905061061d565b50829750879550505050505092915050565b6000610672826109f3565b61067c8185610a3f565b93508360208202850161068e856109d3565b8060005b858110156106ca57848403895281516106ab85826105bb565b94506106b683610a14565b925060208a01995050600181019050610692565b50829750879550505050505092915050565b60006106e7826109fe565b6106f18185610a50565b935083602082028501610703856109e3565b8060005b8581101561073f578484038952815161072085826105cf565b945061072b83610a21565b925060208a01995050600181019050610707565b50829750879550505050505092915050565b61075a81610a95565b82525050565b600061076b82610a09565b6107758185610a61565b9350610785818560208601610acb565b61078e81610afe565b840191505092915050565b60006107a482610a09565b6107ae8185610a72565b93506107be818560208601610acb565b6107c781610afe565b840191505092915050565b60006107df601383610a72565b91506107ea82610b0f565b602082019050919050565b600060808301600083015161080d60008601826108c9565b50602083015161082060208601826108c9565b50604083015184820360408601526108388282610760565b9150506060830151848203606086015261085282826105f2565b9150508091505092915050565b600060808301600083015161087760008601826108c9565b50602083015161088a60208601826108c9565b50604083015184820360408601526108a28282610760565b915050606083015184820360608601526108bc82826105f2565b9150508091505092915050565b6108d281610ac1565b82525050565b6108e181610ac1565b82525050565b60006020820190506108fc60008301846105e3565b92915050565b6000602082019050818103600083015261091c8184610667565b905092915050565b6000602082019050818103600083015261093e81846106dc565b905092915050565b600060208201905061095b6000830184610751565b92915050565b6000604082019050818103600083015261097b8185610799565b9050818103602083015261098f818461085f565b90509392505050565b600060208201905081810360008301526109b1816107d2565b9050919050565b60006020820190506109cd60008301846108d8565b92915050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a8e82610aa1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610ae9578082015181840152602081019050610ace565b83811115610af8576000848401525b50505050565b6000601f19601f8301169050919050565b7f6f6e6c792061646d696e2063616e2063616c6c00000000000000000000000000600082015250565b610b4181610a83565b8114610b4c57600080fd5b50565b610b5881610a95565b8114610b6357600080fd5b50565b610b6f81610ac1565b8114610b7a57600080fd5b5056fea2646970667358221220e40b3a1519039129e27c34fbb383dbe5fd8ba34d12004896bc3ffb4ef61624bf64736f6c63430008040033";

export class KeyStore__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KeyStore> {
    return super.deploy(_nftContract, overrides || {}) as Promise<KeyStore>;
  }
  getDeployTransaction(
    _nftContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftContract, overrides || {});
  }
  attach(address: string): KeyStore {
    return super.attach(address) as KeyStore;
  }
  connect(signer: Signer): KeyStore__factory {
    return super.connect(signer) as KeyStore__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeyStoreInterface {
    return new utils.Interface(_abi) as KeyStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeyStore {
    return new Contract(address, _abi, signerOrProvider) as KeyStore;
  }
}
